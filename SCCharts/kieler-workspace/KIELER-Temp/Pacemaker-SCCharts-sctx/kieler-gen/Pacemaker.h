/*
 * Automatically generated C code by
 * KIELER SCCharts - The Key to Efficient Modeling
 *
 * http://rtsys.informatik.uni-kiel.de/kieler
 */
#ifndef _PACEMAKER_H_
#define _PACEMAKER_H_

// The chosen scheduling regime (IUR) uses four states to maintain the statuses of threads."),
typedef enum {
  TERMINATED,
  RUNNING,
  READY,
  PAUSING
} ThreadStatus;

// Interface
typedef struct {
  int AVI;
  int AEI;
  int PVARP;
  int VRP;
  int LRI;
  int URI;
  int _taken_transitions[17];
  double _region0_Main_AVI_Clock;
  double _region0_Main_VEvents_Clock;
  char _region0_Main_AVI_Stop;
  char _region0_Main_VEvents_Stop;
  double deltaT; // Input
  double sleepT; // Output
  char AS; // Input
  char VS; // Input
  char AP; // Output
  char VP; // Output
  char AR; // Output
  char VR; // Output
  char _Pacemaker_local__Atrig;
  char _Pacemaker_local__Atrig1;
  char _Pacemaker_local__Atrig2;
  char _Pacemaker_local__Atrig3;
  char _Pacemaker_local__Atrig4;
  char _Pacemaker_local__Atrig5;
  char _Pacemaker_local__Atrig6;
  char _Pacemaker_local__Atrig7;
  char _Pacemaker_local__Atrig8;
  char _Pacemaker_local__Atrig9;
  char _Pacemaker_local__Atrig10;
} Iface;

 
// This enum contains all states of the _During region
typedef enum {
    _I35, _AABORTED6
} Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionTimers_state_implicit_regionVentricularEvents_Timer_stateStop_Timer_region__EA_Entry6_state__EA_Main_region_DuringStates;

// The thread data of _During
typedef struct {
  ThreadStatus threadStatus; 
  Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionTimers_state_implicit_regionVentricularEvents_Timer_stateStop_Timer_region__EA_Entry6_state__EA_Main_region_DuringStates activeState; 
  char delayedEnabled; 
  Iface* iface; 
} Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionTimers_state_implicit_regionVentricularEvents_Timer_stateStop_Timer_region__EA_Entry6_state__EA_Main_region_DuringContext;
 
// This enum contains all states of the _ACtrl4 region
typedef enum {
    _ARUN4, _ADONE4
} Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionTimers_state_implicit_regionVentricularEvents_Timer_stateStop_Timer_region__EA_Entry6_state__EA_Main_region_ACtrl4States;

// The thread data of _ACtrl4
typedef struct {
  ThreadStatus threadStatus; 
  Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionTimers_state_implicit_regionVentricularEvents_Timer_stateStop_Timer_region__EA_Entry6_state__EA_Main_region_ACtrl4States activeState; 
  char delayedEnabled; 
  Iface* iface; 
} Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionTimers_state_implicit_regionVentricularEvents_Timer_stateStop_Timer_region__EA_Entry6_state__EA_Main_region_ACtrl4Context;
 
// This enum contains all states of the __EA_Entry6 region
typedef enum {
    __EA_MAIN34, __EA_MAIN34RUNNING, __EA_INIT36, __EA_DONE37
} Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionTimers_state_implicit_regionVentricularEvents_Timer_stateStop_Timer_region__EA_Entry6States;

// The thread data of __EA_Entry6
typedef struct {
  ThreadStatus threadStatus; 
  Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionTimers_state_implicit_regionVentricularEvents_Timer_stateStop_Timer_region__EA_Entry6States activeState; 
  char delayedEnabled; 
  Iface* iface; 
  Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionTimers_state_implicit_regionVentricularEvents_Timer_stateStop_Timer_region__EA_Entry6_state__EA_Main_region_ACtrl4Context Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionTimers_state_implicit_regionVentricularEvents_Timer_stateStop_Timer_region__EA_Entry6_state__EA_Main_region_ACtrl4;
  Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionTimers_state_implicit_regionVentricularEvents_Timer_stateStop_Timer_region__EA_Entry6_state__EA_Main_region_DuringContext Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionTimers_state_implicit_regionVentricularEvents_Timer_stateStop_Timer_region__EA_Entry6_state__EA_Main_region_During;
} Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionTimers_state_implicit_regionVentricularEvents_Timer_stateStop_Timer_region__EA_Entry6Context;
 
// This enum contains all states of the __EA_Entry region
typedef enum {
    __EA_INIT31, __EA_DONE32
} Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionTimers_state_implicit_regionVentricularEvents_Timer_stateContinue_Timer_region__EA_EntryStates;

// The thread data of __EA_Entry
typedef struct {
  ThreadStatus threadStatus; 
  Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionTimers_state_implicit_regionVentricularEvents_Timer_stateContinue_Timer_region__EA_EntryStates activeState; 
  char delayedEnabled; 
  Iface* iface; 
} Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionTimers_state_implicit_regionVentricularEvents_Timer_stateContinue_Timer_region__EA_EntryContext;
 
// This enum contains all states of the VentricularEvents_Timer region
typedef enum {
    CONTINUE_TIMER30, CONTINUE_TIMER30RUNNING, STOP_TIMER33, STOP_TIMER33RUNNING, __EA_EXIT1
} Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionTimers_state_implicit_regionVentricularEvents_TimerStates;

// The thread data of VentricularEvents_Timer
typedef struct {
  ThreadStatus threadStatus; 
  Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionTimers_state_implicit_regionVentricularEvents_TimerStates activeState; 
  char delayedEnabled; 
  Iface* iface; 
  Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionTimers_state_implicit_regionVentricularEvents_Timer_stateContinue_Timer_region__EA_EntryContext Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionTimers_state_implicit_regionVentricularEvents_Timer_stateContinue_Timer_region__EA_Entry;
  Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionTimers_state_implicit_regionVentricularEvents_Timer_stateStop_Timer_region__EA_Entry6Context Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionTimers_state_implicit_regionVentricularEvents_Timer_stateStop_Timer_region__EA_Entry6;
} Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionTimers_state_implicit_regionVentricularEvents_TimerContext;
 
// This enum contains all states of the _During region
typedef enum {
    _I27, _AABORTED5
} Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionTimers_state_implicit_regionAVI_Timer_stateStop_Timer_region__EA_Entry5_state__EA_Main_region_DuringStates;

// The thread data of _During
typedef struct {
  ThreadStatus threadStatus; 
  Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionTimers_state_implicit_regionAVI_Timer_stateStop_Timer_region__EA_Entry5_state__EA_Main_region_DuringStates activeState; 
  char delayedEnabled; 
  Iface* iface; 
} Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionTimers_state_implicit_regionAVI_Timer_stateStop_Timer_region__EA_Entry5_state__EA_Main_region_DuringContext;
 
// This enum contains all states of the _ACtrl3 region
typedef enum {
    _ARUN3, _ADONE3
} Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionTimers_state_implicit_regionAVI_Timer_stateStop_Timer_region__EA_Entry5_state__EA_Main_region_ACtrl3States;

// The thread data of _ACtrl3
typedef struct {
  ThreadStatus threadStatus; 
  Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionTimers_state_implicit_regionAVI_Timer_stateStop_Timer_region__EA_Entry5_state__EA_Main_region_ACtrl3States activeState; 
  char delayedEnabled; 
  Iface* iface; 
} Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionTimers_state_implicit_regionAVI_Timer_stateStop_Timer_region__EA_Entry5_state__EA_Main_region_ACtrl3Context;
 
// This enum contains all states of the __EA_Entry5 region
typedef enum {
    __EA_MAIN26, __EA_MAIN26RUNNING, __EA_INIT28, __EA_DONE29
} Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionTimers_state_implicit_regionAVI_Timer_stateStop_Timer_region__EA_Entry5States;

// The thread data of __EA_Entry5
typedef struct {
  ThreadStatus threadStatus; 
  Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionTimers_state_implicit_regionAVI_Timer_stateStop_Timer_region__EA_Entry5States activeState; 
  char delayedEnabled; 
  Iface* iface; 
  Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionTimers_state_implicit_regionAVI_Timer_stateStop_Timer_region__EA_Entry5_state__EA_Main_region_ACtrl3Context Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionTimers_state_implicit_regionAVI_Timer_stateStop_Timer_region__EA_Entry5_state__EA_Main_region_ACtrl3;
  Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionTimers_state_implicit_regionAVI_Timer_stateStop_Timer_region__EA_Entry5_state__EA_Main_region_DuringContext Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionTimers_state_implicit_regionAVI_Timer_stateStop_Timer_region__EA_Entry5_state__EA_Main_region_During;
} Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionTimers_state_implicit_regionAVI_Timer_stateStop_Timer_region__EA_Entry5Context;
 
// This enum contains all states of the __EA_Entry region
typedef enum {
    __EA_INIT24, __EA_DONE25
} Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionTimers_state_implicit_regionAVI_Timer_stateContinue_Timer_region__EA_EntryStates;

// The thread data of __EA_Entry
typedef struct {
  ThreadStatus threadStatus; 
  Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionTimers_state_implicit_regionAVI_Timer_stateContinue_Timer_region__EA_EntryStates activeState; 
  char delayedEnabled; 
  Iface* iface; 
} Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionTimers_state_implicit_regionAVI_Timer_stateContinue_Timer_region__EA_EntryContext;
 
// This enum contains all states of the AVI_Timer region
typedef enum {
    CONTINUE_TIMER, CONTINUE_TIMERRUNNING, STOP_TIMER, STOP_TIMERRUNNING, __EA_EXIT
} Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionTimers_state_implicit_regionAVI_TimerStates;

// The thread data of AVI_Timer
typedef struct {
  ThreadStatus threadStatus; 
  Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionTimers_state_implicit_regionAVI_TimerStates activeState; 
  char delayedEnabled; 
  Iface* iface; 
  Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionTimers_state_implicit_regionAVI_Timer_stateContinue_Timer_region__EA_EntryContext Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionTimers_state_implicit_regionAVI_Timer_stateContinue_Timer_region__EA_Entry;
  Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionTimers_state_implicit_regionAVI_Timer_stateStop_Timer_region__EA_Entry5Context Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionTimers_state_implicit_regionAVI_Timer_stateStop_Timer_region__EA_Entry5;
} Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionTimers_state_implicit_regionAVI_TimerContext;
 
// This enum contains all states of the Timers region
typedef enum {
    _IMPLICIT23, _IMPLICIT23RUNNING
} Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionTimersStates;

// The thread data of Timers
typedef struct {
  ThreadStatus threadStatus; 
  Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionTimersStates activeState; 
  char delayedEnabled; 
  Iface* iface; 
  Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionTimers_state_implicit_regionAVI_TimerContext Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionTimers_state_implicit_regionAVI_Timer;
  Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionTimers_state_implicit_regionVentricularEvents_TimerContext Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionTimers_state_implicit_regionVentricularEvents_Timer;
} Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionTimersContext;
 
// This enum contains all states of the _During region
typedef enum {
    _I19, _S20, _AABORTED4
} Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionController_stateWaitForVS_region__EA_Entry4_state__EA_Main_region_During3States;

// The thread data of _During
typedef struct {
  ThreadStatus threadStatus; 
  Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionController_stateWaitForVS_region__EA_Entry4_state__EA_Main_region_During3States activeState; 
  char delayedEnabled; 
  Iface* iface; 
} Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionController_stateWaitForVS_region__EA_Entry4_state__EA_Main_region_During3Context;
 
// This enum contains all states of the _During region
typedef enum {
    _I17, _S18, _AABORTED3
} Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionController_stateWaitForVS_region__EA_Entry4_state__EA_Main_region_During2States;

// The thread data of _During
typedef struct {
  ThreadStatus threadStatus; 
  Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionController_stateWaitForVS_region__EA_Entry4_state__EA_Main_region_During2States activeState; 
  char delayedEnabled; 
  Iface* iface; 
} Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionController_stateWaitForVS_region__EA_Entry4_state__EA_Main_region_During2Context;
 
// This enum contains all states of the _During region
typedef enum {
    _I15, _S16, _AABORTED2
} Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionController_stateWaitForVS_region__EA_Entry4_state__EA_Main_region_DuringStates;

// The thread data of _During
typedef struct {
  ThreadStatus threadStatus; 
  Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionController_stateWaitForVS_region__EA_Entry4_state__EA_Main_region_DuringStates activeState; 
  char delayedEnabled; 
  Iface* iface; 
} Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionController_stateWaitForVS_region__EA_Entry4_state__EA_Main_region_DuringContext;
 
// This enum contains all states of the _ACtrl2 region
typedef enum {
    _ARUN2, _ADONE2
} Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionController_stateWaitForVS_region__EA_Entry4_state__EA_Main_region_ACtrl2States;

// The thread data of _ACtrl2
typedef struct {
  ThreadStatus threadStatus; 
  Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionController_stateWaitForVS_region__EA_Entry4_state__EA_Main_region_ACtrl2States activeState; 
  char delayedEnabled; 
  Iface* iface; 
} Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionController_stateWaitForVS_region__EA_Entry4_state__EA_Main_region_ACtrl2Context;
 
// This enum contains all states of the __EA_Entry4 region
typedef enum {
    __EA_MAIN14, __EA_MAIN14RUNNING, __EA_INIT21, __EA_DONE22, __EA_C15, __EA_C16
} Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionController_stateWaitForVS_region__EA_Entry4States;

// The thread data of __EA_Entry4
typedef struct {
  ThreadStatus threadStatus; 
  Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionController_stateWaitForVS_region__EA_Entry4States activeState; 
  char delayedEnabled; 
  Iface* iface; 
  Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionController_stateWaitForVS_region__EA_Entry4_state__EA_Main_region_ACtrl2Context Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionController_stateWaitForVS_region__EA_Entry4_state__EA_Main_region_ACtrl2;
  Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionController_stateWaitForVS_region__EA_Entry4_state__EA_Main_region_DuringContext Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionController_stateWaitForVS_region__EA_Entry4_state__EA_Main_region_During;
  Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionController_stateWaitForVS_region__EA_Entry4_state__EA_Main_region_During2Context Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionController_stateWaitForVS_region__EA_Entry4_state__EA_Main_region_During2;
  Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionController_stateWaitForVS_region__EA_Entry4_state__EA_Main_region_During3Context Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionController_stateWaitForVS_region__EA_Entry4_state__EA_Main_region_During3;
} Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionController_stateWaitForVS_region__EA_Entry4Context;
 
// This enum contains all states of the _During region
typedef enum {
    _I10, _S11, _AABORTED1
} Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionController_stateInAtriumRefractoryPeriod_region__EA_Entry3_state__EA_Main_region_DuringStates;

// The thread data of _During
typedef struct {
  ThreadStatus threadStatus; 
  Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionController_stateInAtriumRefractoryPeriod_region__EA_Entry3_state__EA_Main_region_DuringStates activeState; 
  char delayedEnabled; 
  Iface* iface; 
} Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionController_stateInAtriumRefractoryPeriod_region__EA_Entry3_state__EA_Main_region_DuringContext;
 
// This enum contains all states of the _ACtrl1 region
typedef enum {
    _ARUN1, _ADONE1
} Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionController_stateInAtriumRefractoryPeriod_region__EA_Entry3_state__EA_Main_region_ACtrl1States;

// The thread data of _ACtrl1
typedef struct {
  ThreadStatus threadStatus; 
  Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionController_stateInAtriumRefractoryPeriod_region__EA_Entry3_state__EA_Main_region_ACtrl1States activeState; 
  char delayedEnabled; 
  Iface* iface; 
} Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionController_stateInAtriumRefractoryPeriod_region__EA_Entry3_state__EA_Main_region_ACtrl1Context;
 
// This enum contains all states of the __EA_Entry3 region
typedef enum {
    __EA_MAIN9, __EA_MAIN9RUNNING, __EA_INIT12, __EA_DONE13, __EA_C12, __EA_C13, __EA_C14
} Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionController_stateInAtriumRefractoryPeriod_region__EA_Entry3States;

// The thread data of __EA_Entry3
typedef struct {
  ThreadStatus threadStatus; 
  Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionController_stateInAtriumRefractoryPeriod_region__EA_Entry3States activeState; 
  char delayedEnabled; 
  Iface* iface; 
  Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionController_stateInAtriumRefractoryPeriod_region__EA_Entry3_state__EA_Main_region_ACtrl1Context Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionController_stateInAtriumRefractoryPeriod_region__EA_Entry3_state__EA_Main_region_ACtrl1;
  Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionController_stateInAtriumRefractoryPeriod_region__EA_Entry3_state__EA_Main_region_DuringContext Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionController_stateInAtriumRefractoryPeriod_region__EA_Entry3_state__EA_Main_region_During;
} Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionController_stateInAtriumRefractoryPeriod_region__EA_Entry3Context;
 
// This enum contains all states of the _During region
typedef enum {
    _I7, _S8, _AABORTED
} Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionController_stateWaitForAS_region__EA_Entry2_state__EA_Main_region_DuringStates;

// The thread data of _During
typedef struct {
  ThreadStatus threadStatus; 
  Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionController_stateWaitForAS_region__EA_Entry2_state__EA_Main_region_DuringStates activeState; 
  char delayedEnabled; 
  Iface* iface; 
} Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionController_stateWaitForAS_region__EA_Entry2_state__EA_Main_region_DuringContext;
 
// This enum contains all states of the _ACtrl region
typedef enum {
    _ARUN, _ADONE
} Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionController_stateWaitForAS_region__EA_Entry2_state__EA_Main_region_ACtrlStates;

// The thread data of _ACtrl
typedef struct {
  ThreadStatus threadStatus; 
  Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionController_stateWaitForAS_region__EA_Entry2_state__EA_Main_region_ACtrlStates activeState; 
  char delayedEnabled; 
  Iface* iface; 
} Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionController_stateWaitForAS_region__EA_Entry2_state__EA_Main_region_ACtrlContext;
 
// This enum contains all states of the __EA_Entry2 region
typedef enum {
    __EA_MAIN6, __EA_MAIN6RUNNING, __EA_INIT, __EA_DONE, __EA_C11
} Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionController_stateWaitForAS_region__EA_Entry2States;

// The thread data of __EA_Entry2
typedef struct {
  ThreadStatus threadStatus; 
  Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionController_stateWaitForAS_region__EA_Entry2States activeState; 
  char delayedEnabled; 
  Iface* iface; 
  Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionController_stateWaitForAS_region__EA_Entry2_state__EA_Main_region_ACtrlContext Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionController_stateWaitForAS_region__EA_Entry2_state__EA_Main_region_ACtrl;
  Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionController_stateWaitForAS_region__EA_Entry2_state__EA_Main_region_DuringContext Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionController_stateWaitForAS_region__EA_Entry2_state__EA_Main_region_During;
} Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionController_stateWaitForAS_region__EA_Entry2Context;
 
// This enum contains all states of the Controller region
typedef enum {
    WAITFORAS, WAITFORASRUNNING, INATRIUMREFRACTORYPERIOD, INATRIUMREFRACTORYPERIODRUNNING, AS_SENSED, AS_NOTSENSED, WAITFORVS, WAITFORVSRUNNING, VS_SENSED, VS_NOTSENSED, _AC, _AC1, _AC2
} Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionControllerStates;

// The thread data of Controller
typedef struct {
  ThreadStatus threadStatus; 
  Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionControllerStates activeState; 
  char delayedEnabled; 
  Iface* iface; 
  Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionController_stateWaitForAS_region__EA_Entry2Context Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionController_stateWaitForAS_region__EA_Entry2;
  Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionController_stateInAtriumRefractoryPeriod_region__EA_Entry3Context Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionController_stateInAtriumRefractoryPeriod_region__EA_Entry3;
  Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionController_stateWaitForVS_region__EA_Entry4Context Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionController_stateWaitForVS_region__EA_Entry4;
} Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionControllerContext;
 
// This enum contains all states of the Main region
typedef enum {
    _IMPLICIT, _IMPLICITRUNNING
} Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMainStates;

// The thread data of Main
typedef struct {
  ThreadStatus threadStatus; 
  Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMainStates activeState; 
  char delayedEnabled; 
  Iface* iface; 
  Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionControllerContext Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionController;
  Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionTimersContext Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain_state_implicit_regionTimers;
} Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMainContext;
 
// This enum contains all states of the _During region
typedef enum {
    _I5
} Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_region_During1States;

// The thread data of _During
typedef struct {
  ThreadStatus threadStatus; 
  Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_region_During1States activeState; 
  char delayedEnabled; 
  Iface* iface; 
} Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_region_During1Context;
 
// This enum contains all states of the _During region
typedef enum {
    _I4
} Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_region_During0States;

// The thread data of _During
typedef struct {
  ThreadStatus threadStatus; 
  Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_region_During0States activeState; 
  char delayedEnabled; 
  Iface* iface; 
} Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_region_During0Context;
 
// This enum contains all states of the _During region
typedef enum {
    _I2, _S3
} Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_region_DuringStates;

// The thread data of _During
typedef struct {
  ThreadStatus threadStatus; 
  Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_region_DuringStates activeState; 
  char delayedEnabled; 
  Iface* iface; 
} Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_region_DuringContext;
 
// This enum contains all states of the __EA_Entry1 region
typedef enum {
    __EA_MAIN1, __EA_MAIN1RUNNING, __EA_INIT38, __EA_DONE39
} Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1States;

// The thread data of __EA_Entry1
typedef struct {
  ThreadStatus threadStatus; 
  Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1States activeState; 
  char delayedEnabled; 
  Iface* iface; 
  Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_region_DuringContext Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_region_During;
  Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_region_During0Context Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_region_During0;
  Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_region_During1Context Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_region_During1;
  Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMainContext Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1_state__EA_Main_regionMain;
} Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1Context;
 
// This enum contains all states of the _main region
typedef enum {
    _MAIN, _MAINRUNNING
} Pacemaker_region__EA_Entry_state__EA_Main_region_mainStates;

// The thread data of _main
typedef struct {
  ThreadStatus threadStatus; 
  Pacemaker_region__EA_Entry_state__EA_Main_region_mainStates activeState; 
  char delayedEnabled; 
  Iface* iface; 
  Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1Context Pacemaker_region__EA_Entry_state__EA_Main_region_main_state_main_region__EA_Entry1;
} Pacemaker_region__EA_Entry_state__EA_Main_region_mainContext;
 
// This enum contains all states of the _During region
typedef enum {
    _I, _S
} Pacemaker_region__EA_Entry_state__EA_Main_region_DuringStates;

// The thread data of _During
typedef struct {
  ThreadStatus threadStatus; 
  Pacemaker_region__EA_Entry_state__EA_Main_region_DuringStates activeState; 
  char delayedEnabled; 
  Iface* iface; 
} Pacemaker_region__EA_Entry_state__EA_Main_region_DuringContext;
 
// This enum contains all states of the __EA_Entry region
typedef enum {
    __EA_MAIN, __EA_MAINRUNNING, __EA_INIT40, __EA_DONE41, __EA_C, __EA_C1, __EA_C2, __EA_C3, __EA_C4, __EA_C5, __EA_C6, __EA_C7, __EA_C8, __EA_C9, __EA_C10
} Pacemaker_region__EA_EntryStates;

// The thread data of __EA_Entry
typedef struct {
  ThreadStatus threadStatus; 
  Pacemaker_region__EA_EntryStates activeState; 
  char delayedEnabled; 
  Iface* iface; 
  Pacemaker_region__EA_Entry_state__EA_Main_region_DuringContext Pacemaker_region__EA_Entry_state__EA_Main_region_During;
  Pacemaker_region__EA_Entry_state__EA_Main_region_mainContext Pacemaker_region__EA_Entry_state__EA_Main_region_main;
} Pacemaker_region__EA_EntryContext;

// Root level data of the program
typedef struct {
  Iface iface;
  ThreadStatus threadStatus;
  char delayedEnabled;
  
  Pacemaker_region__EA_EntryContext Pacemaker_region__EA_Entry;
} TickData;



void reset(TickData *context);
void tick(TickData *context);

#endif