#ifndef PACEMAKER_H
#define PACEMAKER_H
/*
 * Automatically generated C code by
 * KIELER SCCharts - The Key to Efficient Modeling
 *
 * http://rtsys.informatik.uni-kiel.de/kieler
 */

#include "timing.h"


typedef struct {
  int AVI;
  int AEI;
  int PVARP;
  int VRP;
  int LRI;
  int URI;
  double VRP_Clock;
  double AEI_Clock;
  double LRI_Clock;
  double URI_Clock;
  double PVARP_Clock;
  double AVI_Clock;
  int _taken_transitions[7];
  double deltaT;
  double sleepT;
  char AS;
  char VS;
  char AP;
  char VP;
  char _Pacemaker_local__Atrig;
  char _Pacemaker_local__Atrig1;
  char _Pacemaker_local__Atrig2;
  char _Pacemaker_local__Atrig3;
  char _Pacemaker_local__Atrig4;
  char _Pacemaker_local__Atrig5;
  char _g3;
  char _g5;
  char _g7;
  char _g8;
  char _g9;
  char _g10;
  char _g11;
  char _g13;
  char _g14;
  char _g16;
  char _g18;
  char _g19;
  char _g20;
  char _g21;
  char _g22;
  char _g24;
  char _g25;
  char _g27;
  char _g29;
  char _g30;
  char _g31;
  char _g32;
  char _g33;
  char _g35;
  char _g36;
  char _g38;
  char _g40;
  char _g41;
  char _g42;
  char _g43;
  char _g44;
  char _g46;
  char _g47;
  char _g50;
  char _g51;
  char _g52;
  char _g53;
  char _g54;
  char _g55;
  char _g56;
  char _g57;
  char _g58;
  char _g59;
  char _g64;
  char _g65;
  char _g66;
  char _g67;
  char _g70;
  char _g75;
  char _g76;
  char _g78;
  char _g81;
  char _g85;
  char _g86;
  char _g87;
  char _g88;
  char _g89;
  char _g91;
  char _g92;
  char _g93;
  char _g94;
  char _g95;
  char _g96;
  char _g97;
  char _g98;
  char _g99;
  char _g107;
  char _g111;
  char _g115;
  char _g123;
  char _g127;
  char _g135;
  char _GO;
  char _cg4;
  char _cg5;
  char _cg9;
  char _cg8;
  char _cg11;
  char _cg14;
  char _cg15;
  char _cg16;
  char _cg20;
  char _cg19;
  char _cg22;
  char _cg25;
  char _cg26;
  char _cg27;
  char _cg31;
  char _cg30;
  char _cg33;
  char _cg36;
  char _cg37;
  char _cg38;
  char _cg42;
  char _cg41;
  char _cg44;
  char _cg47;
  char _cg55;
  char _cg50;
  char _cg53;
  char _cg57;
  char _cg61;
  char _cg62;
  char _cg66;
  char _cg65;
  char _cg68;
  char _cg71;
  char _cg72;
  char _cg73;
  char _cg77;
  char _cg76;
  char _cg79;
  char _cg82;
  char _cg90;
  char _cg85;
  char _cg88;
  char _cg92;
  char _cg94;
  char _cg97;
  char _g10_e1;
  char _g21_e2;
  char _g32_e3;
  char _g43_e4;
  char _g52_e5;
  char _g67_e1;
  char _g78_e2;
  char _g87_e3;
  char _TERM;
  char _pg66;
  char _pg44;
  char _pg38;
  char _pg96;
  char _pg97;
  char _pg58;
  char _pg57;
  char _pg55;
  char _pg67_e1;
  char _pg32;
  char _pg10;
  char _pg59;
  char _pg20;
  char _pg99;
  char _pg94;
  char _pg32_e3;
  char _pg21_e2;
  char _pg5;
  char _pg93;
  char _pg16;
  char _pg11;
} TickData;

void reset(TickData* d);
void logic(TickData* d);
void tick(TickData* d);

#endif /* !PACEMAKER_H */
